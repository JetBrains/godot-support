GdScript File
  GdMethodDecl
    PsiElement(GdTokenType.FUNC)('func')
    PsiWhiteSpace(' ')
    GdMethodIdNmiImpl(METHOD_ID_NMI)
      PsiElement(GdTokenType.IDENTIFIER)('test')
    PsiElement(GdTokenType.LRBR)('(')
    PsiElement(GdTokenType.RRBR)(')')
    PsiElement(GdTokenType.COLON)(':')
    GdStmtOrSuiteImpl(STMT_OR_SUITE)
      GdSuiteImpl(SUITE)
        PsiElement(GdTokenType.NEW_LINE)('\n')
        PsiWhiteSpace('\t')
        PsiComment(GdTokenType.comment)('# Mixing Python-style and Lua-style syntax in the same dictionary declaration')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\t')
        PsiComment(GdTokenType.comment)('# is allowed.')
        PsiWhiteSpace('\n')
        PsiElement(GdTokenType.INDENT)('\t')
        GdVarDeclStImpl(VAR_DECL_ST)
          PsiElement(GdTokenType.VAR)('var')
          PsiWhiteSpace(' ')
          GdVarNmiImpl(VAR_NMI)
            PsiElement(GdTokenType.IDENTIFIER)('dict')
          PsiWhiteSpace(' ')
          GdAssignTypedImpl(ASSIGN_TYPED)
            PsiElement(GdTokenType.EQ)('=')
          PsiWhiteSpace(' ')
          GdPrimaryExImpl(PRIMARY_EX)
            GdDictDeclImpl(DICT_DECL)
              PsiElement(GdTokenType.LCBR)('{')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('\t\t')
              GdKeyValueImpl(KEY_VALUE)
                GdLiteralExImpl(LITERAL_EX)
                  GdStringValRefImpl(STRING_VAL_NM)
                    PsiElement(GdTokenType.STRING)('"hello"')
                PsiElement(GdTokenType.COLON)(':')
                PsiWhiteSpace(' ')
                GdPrimaryExImpl(PRIMARY_EX)
                  GdDictDeclImpl(DICT_DECL)
                    PsiElement(GdTokenType.LCBR)('{')
                    PsiWhiteSpace('\n')
                    PsiWhiteSpace('\t\t\t')
                    GdKeyValueImpl(KEY_VALUE)
                      PsiElement(GdTokenType.IDENTIFIER)('world')
                      PsiWhiteSpace(' ')
                      PsiElement(GdTokenType.EQ)('=')
                      PsiWhiteSpace(' ')
                      GdPrimaryExImpl(PRIMARY_EX)
                        GdDictDeclImpl(DICT_DECL)
                          PsiElement(GdTokenType.LCBR)('{')
                          PsiWhiteSpace('\n')
                          PsiWhiteSpace('\t\t\t\t')
                          GdKeyValueImpl(KEY_VALUE)
                            GdLiteralExImpl(LITERAL_EX)
                              GdStringValRefImpl(STRING_VAL_NM)
                                PsiElement(GdTokenType.STRING)('"is"')
                            PsiElement(GdTokenType.COLON)(':')
                            PsiWhiteSpace(' ')
                            GdLiteralExImpl(LITERAL_EX)
                              GdStringValRefImpl(STRING_VAL_NM)
                                PsiElement(GdTokenType.STRING)('"beautiful"')
                          PsiElement(GdTokenType.COMMA)(',')
                          PsiWhiteSpace('\n')
                          PsiWhiteSpace('\t\t\t')
                          PsiElement(GdTokenType.RCBR)('}')
                    PsiElement(GdTokenType.COMMA)(',')
                    PsiWhiteSpace('\n')
                    PsiWhiteSpace('\t\t')
                    PsiElement(GdTokenType.RCBR)('}')
              PsiElement(GdTokenType.COMMA)(',')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('\t')
              PsiElement(GdTokenType.RCBR)('}')
          GdEndStmtImpl(END_STMT)
            PsiElement(GdTokenType.NEW_LINE)('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\t')
        GdExprStImpl(EXPR_ST)
          GdCallExImpl(CALL_EX)
            GdLiteralExImpl(LITERAL_EX)
              GdRefIdRefImpl(REF_ID_NM)
                PsiElement(GdTokenType.IDENTIFIER)('print')
            PsiElement(GdTokenType.LRBR)('(')
            GdArgListImpl(ARG_LIST)
              GdArgExprImpl(ARG_EXPR)
                GdLiteralExImpl(LITERAL_EX)
                  GdRefIdRefImpl(REF_ID_NM)
                    PsiElement(GdTokenType.IDENTIFIER)('dict')
            PsiElement(GdTokenType.RRBR)(')')
          GdEndStmtImpl(END_STMT)
            <empty list>